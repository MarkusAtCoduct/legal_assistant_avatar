/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/


import { useAnimations, useGLTF } from "@react-three/drei";
import { useThree } from "@react-three/fiber";
import { useRef } from "react";
import * as THREE from "three";

import { GLTF, KTX2Loader } from "three-stdlib";
import { MeshoptDecoder } from "three/examples/jsm/libs/meshopt_decoder.module.js";
//import { KTX2Loader } from "three/examples/jsm/Addons.js";

type GLTFResult = GLTF & {
  nodes: {
    mesh_0: THREE.Mesh;
    mesh_1: THREE.Mesh;
    mesh_2: THREE.Mesh;
    mesh_3: THREE.Mesh;
  };
  materials: {
    lambert5: THREE.MeshStandardMaterial;
  };
};

type ActionName =
  | "Key|Take 001|BaseLayer"
  | "grp_eyeLeft|Take 001|BaseLayer"
  | "grp_eyeRight|Take 001|BaseLayer"
  | "grp_transform|Take 001|BaseLayer";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export function Model(props: JSX.IntrinsicElements["group"]) {

    const { gl } = useThree()

  const group = useRef<THREE.Group>();
  //const ktx2Loader = new KTX2Loader().setTranscoderPath(`three/examples/jsm/libs/basis/`)
  const { nodes, materials, animations } = useGLTF(
    "/facecap.glb" , true, true , (loader) => {
        const THREE_PATH = `https://unpkg.com/three@0.${THREE.REVISION}.x`
    const ktx2Loader = new KTX2Loader().setTranscoderPath(`${THREE_PATH}/examples/jsm/libs/basis/`)
    console.log(ktx2Loader)
    loader.setKTX2Loader(ktx2Loader)
    loader.setMeshoptDecoder(MeshoptDecoder)
        }
  ) as GLTFResult;


  console.log(nodes)
  const { actions } = useAnimations<GLTFActions>(animations, group);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Empty" scale={10}>
          <group name="grp_scale" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
            <group name="grp_transform" rotation={[-0.022, -0.033, -0.008]}>
              <group
                name="grp_eyeLeft"
                position={[-3.289, 2.382, -2.612]}
                rotation={[0.168, -0.003, -0.015]}
              >
                <group name="eyeLeft">
                  <mesh
                    name="mesh_0"
                    castShadow
                    receiveShadow
                    geometry={nodes.mesh_0.geometry}
                    material={materials.lambert5}
                    position={[-10.903, -18.028, -18.131]}
                    scale={0.002}
                  />
                </group>
              </group>
              <group
                name="grp_eyeRight"
                position={[3.289, 2.382, -2.612]}
                rotation={[0.167, -0.012, -0.07]}
              >
                <group name="eyeRight">
                  <mesh
                    name="mesh_1"
                    castShadow
                    receiveShadow
                    geometry={nodes.mesh_1.geometry}
                    material={materials.lambert5}
                    position={[-10.903, -18.028, -18.131]}
                    scale={0.002}
                  />
                </group>
              </group>
              <group name="head">
                <mesh
                  name="mesh_2"
                  castShadow
                  receiveShadow
                  geometry={nodes.mesh_2.geometry}
                  material={materials.lambert5}
                  morphTargetDictionary={nodes.mesh_2.morphTargetDictionary}
                  morphTargetInfluences={nodes.mesh_2.morphTargetInfluences}
                  position={[-10.903, -18.028, -18.131]}
                  scale={0.002}
                />
              </group>
              <group name="teeth">
                <mesh
                  name="mesh_3"
                  castShadow
                  receiveShadow
                  geometry={nodes.mesh_3.geometry}
                  material={materials.lambert5}
                  position={[-10.903, -18.028, -18.131]}
                  scale={0.002}
                />
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

//useGLTF.preload("/facecap.glb");
